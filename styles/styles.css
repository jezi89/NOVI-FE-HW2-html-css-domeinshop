/*////////////////////////////////////////////////////////////////////////
Table of Contents:
    1. Global Styles
    2. Typografie
    3. Areas
        3.1 Header
        3.2 Testimonial
        3.3 Support
        3.4 Faq
        3.5 Footer
////////////////////////////////////////////////////////////////////////*/

/*color: #899CA0;*/
/*color: #1C2B32;*/

/*////////////////////////
    1. Global Styles
////////////////////////*/

@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;500&display=swap');


* {
    /* 1. Looks like we need text to align in the horizontal middle of the page for starters.*/
    /*Decided to leave it out and only apply it to .hero-text and ..domain-form*/
    /*text-align: center;*/

    /*We want all elements specified height and width to be sized in an intuitive way, so including margin and padding when defining total width of a box*/
    /*Otherwise the parent  will dictate the size of the content-box if you use 100% width for example, causing overflow of remaining margin, border etc. https://www.joshwcomeau.com/css/custom-css-reset/#one-box-sizing-model-2*/
    /*See: https://www.joshwcomeau.com/css/custom-css-reset/#one-box-sizing-model-2*/
    box-sizing: border-box;

    /* 2. Remove default margin. Apparently browsers could put extra default margin around an h1 element compared to smaller  headers for examples. */
    /*We do not want margin-collapse. ðŸ˜² https://www.joshwcomeau.com/css/rules-of-margin-collapse/*/
    margin: 0;
}

body, html {
    height: 100%;
    margin: 0;
    font-family: "Poppins", sans-serif;
    font-weight: 300;
    font-style: normal;
    color: black;
}

body {

    /* 3. Improve text rendering */
    /*TLDR: Debatable, maar tegenwoordig zijn de pixels op een scherm vaak klein genoeg, zodat subpixel antialiasing niet nodig is.*/
    /*Chrome en Safari doen afaik subpixel antialiasing by default, maar dit maakt de tekst er over het algemeen niet leesbaarder op.*/
    /*Op mobiele toestellen werkt dat sub-pixel sowieso niet volgens mij en Google Fonts showcased de boel ook met -webkit-font-smoothing: antialiast. Aangezien we Google Fonts willen gebruiken kiezen we voor WYSIWYG*/


}

body * {

    /* 4. Voeg een toegankelijke line-height toe */
    /* Mijn vriendin is dyslectisch en voor haar is een line-height van 1.5 "een must" om de leesbaarheid te verbeteren.
       Zie ook: https://www.w3.org/WAI/WCAG21/Understanding/text-spacing.html voor meer context over de aanbevolen richtlijnen voor tekstspatiÃ«ring. */

    /* Ik wil echter voorkomen dat grotere teksten onnodig veel witruimte krijgen, daarom gebruik ik calc() om een meer
       dynamische line-height te bepalen die afhankelijk is van het huidige lettertype en zijn grootte. */

    /* De onderstaande oplossing gebruikt 2px aan vaste ruimte boven en onder de tekstregel voor consistentie,
       terwijl 2ex zorgt voor een aanpasbare kernhoogte die afhankelijk is van de grootte van het huidige lettertype.
       'ex' is gebaseerd op de hoogte van de letter 'x' in het huidige lettertype, net zoals 'em' voor de font-size gebruikt wordt.
       Zie: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Values_and_Units#dimensions en
       https://kittygiraudel.com/2020/05/18/using-calc-to-figure-out-optimal-line-height/ voor meer details. */

    /* Dit experiment is niet geschikt voor productiepagina's met veel dynamische of potentieel overlappende tekst,
       aangezien de resulterende line-height lastig voorspelbaar kan zijn en visuele inconsistenties kan veroorzaken. */
    line-height: calc(2px + 2ex + 2px);

    /* We zouden ook de volgende benadering kunnen gebruiken om aanpassingen voor heading-elementen te elimineren,
       maar ik wil eerst beter begrijpen hoe calc() werkt met verschillende eenheden voordat ik verder ga:

       * {
           line-height: calc(1em + 0.5rem);
       }
       body {
           line-height: 1.5;
       }
    */
}


/*////////////////////////
    2. Typography
////////////////////////*/


h1 {
    font-size: clamp(1.5rem, 5vw + 1rem, 10rem);
    font-weight: 500;
}

h2 {
    text-align: center;
    margin: 4rem auto 3rem;
    font-weight: 500;
}

a {
    /*Styled linkjes globaal*/
    color: #899CA0;

}

#register {
    font-size: 16px;
    text-shadow: 2px 2px 5px rgba(255, 255, 255, 0.4); /* Lichte schaduw voor een zachte glow */
}

a:hover {
    /*Haalt de underline globaal weg bij hover over linkjes*/
    text-decoration-line: none;
}


/*5 Improve media defaults*/
/*I don't want default font-styling in my inputs. Especially not when entering a domain name I would like to style. */
/*Apparently your browser could zoom you in because of this. ðŸ¥¸*/
/*Let's start with base font properties (which the font property does for us) to confirm to the font stuff we chose in the first defining wrapper container (surrounding environment).  */

input, button, textarea, select {

    font: inherit;
}


/*6  Improve line wrapping*/
/*This should improve line wrapping algorithm, so that a single word (in eg. review box) or a single emoji ðŸ¥¹ gets isolated and wrapped onto a new line just by itself. */
/*Might take a hit on performance, so will use it with care.*/
p {
    text-wrap: pretty
}


/*////////////////////////
    3. Areas
////////////////////////*/

/*7. Improve media defaults*/
/*TLDR: We don't want inline-spacing magic happening and <img> et al. behaves like an inline-block, even though it has a display value of inline.*/
/*Check: https://www.w3schools.com/html/html_blocks.asp and https://www.w3schools.com/cssref/pr_class_display.php for differences in display values*/
/*Check https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#styling_with_css why img can be sized as being inline-block by default*/

/*I also set max-width: 100%. This is done to keep large images from overflowing, if they're placed in a container that isn't wide enough to contain them.*/
/*Catch: Maybe we need overflow for the hero cover image, but we will check later.
If we do use
max-width: revert*/

img, picture, video, canvas, svg {
    display: block;
    max-width: 100%;
}


/*///////////// 3.1 Header /////////////*/
header {
    height: 500px;
    position: relative;

}

.hero-wrapper {
    max-width: 1000px;
    height: 100%;
    margin: auto; /* Centreer het element horizontaal */
    position: relative; /* Dit maakt absolute positionering binnen deze container mogelijk */
    padding: 25px 20px; /* Extra ruimte om de inhoud goed zichtbaar te maken */
    text-align: center; /* Zorg dat alles gecentreerd wordt */
    z-index: 2; /* Zorg ervoor dat de wrapper boven de afbeelding staat */

}

.hero-image {
    content: "";

    top: 0;
    left: 0;
    background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0.1), rgba(0, 0, 0, 0.1)), url("../assets/images/mountains.jpg");
    background-size: cover; /* Vul de gehele container zonder vervorming */
    background-repeat: no-repeat;
    background-position: center bottom; /* Houd de focus van de afbeelding onderin */
    height: 100%;
    position: relative;
    min-height: 500px; /* Zorgt voor een minimumhoogte, vooral handig op brede schermen. Hier moet eigenlijk een aparte hero image voor komen of grijskleuren aan de zijkant*/
    z-index: 1; /* Achtergrond overlay die ervoor zorgt dat tekst leesbaar blijft. Weet niet zeker of dit nodig is, want lijkt nu niet veel uit te halen. */
}

/* Specifieke aanpassingen voor ultrabrede schermen */
@media (min-width: 1920px) {
    .hero-image {
        background-position: center 37%; /* Verschuift de focus van de afbeelding iets naar boven op ultrabrede schermen */
    }
}

/* Specifieke aanpassingen voor schermen tussen 800px en 1920px breed */
@media (min-width: 800px) and (max-width: 1920px) {
    .hero-image {
        background-position: center 42%; /* Verplaats de afbeelding iets naar boven zodat de bomen zichtbaar blijven */
    }
}

/* Aanpassingen voor kleinere schermen (landscape modus) */
@media (max-width: 768px) and (orientation: landscape) {
    .hero-image {
        background-position: center top;
        background-size: cover;
    }
}


/*!* Aanpassingen voor kleinere schermen zoals tablets in landscape modus *!*/
/*@media (max-width: 768px) and (orientation: landscape) {*/
/*    .hero-image {*/
/*        background-size: cover;*/
/*        background-position: center top; !* Verplaats de focus naar boven om meer van de afbeelding zichtbaar te maken *!*/
/*    }*/
/*}*/

/*Dit moet eigenlijk meer responsive en anders.*/

.hero-text h1 {
    margin-bottom: 0; /* Zorgt ervoor dat er geen extra ruimte is tussen de titel en de tekst eronder */
}

.hero-text p {
    margin-top: 5px; /* Pas deze waarde aan voor nauwkeurige positionering */
    margin-bottom: 25px; /* Verlaag deze waarde als er teveel ruimte is naar de domain-form */
    font-size: 16px;

}


.domain-form {
    text-align: center;
    display: inline-block;
    align-items: center; /* Plaats de elementen in het midden van de container */
    justify-content: center; /* Centreer de elementen horizontaal */
    margin: 0 auto;
    font-size: 0;
}


/* Collapse whitespace: Met deze hack lijken we dus niet te hoeven werken met een negative margin!!!
   Alleen is het nog niet responsive, dus we moeten wel nog de buttons aanpassen vanaf een breakpoint bij kleinere schermen. */
/*Als we kijken naar de root cause, dan is het probleem dat inline-block elements een standaard afstand hebben die bepaald wordt door de font-size.*/
/*We resetten de font-size weer in de volgende declaraties*/

/*  Er zijn zelfs nog twee andere mogelijkheden om de elementen naast elkaar te krijgen zonder flexbox:
      Met float: left in de elementen  en overflow: hidden in de domain-form wrapper.
  Of met good-old CSS Table Properties.
  Zie: https://chatgpt.com/share/6747a522-972c-8010-bb70-da0b002959dc
  */


.domain-input, .domain-button {
    font-size: 16px; /* Reset font size */
    display: inline-block; /* Houd het element inline zodat het naast de button komt */
    vertical-align: middle; /* Zorg ervoor dat het input veld verticaal uitgelijnd is met de knop */
    margin: 0;
    line-height: normal; /* We fixen hier even de custom line height reset, die wel kan helpen bij leesbaarheid van de rest van mijn elementen, maar hier zorgt voor een te klein button */
}

/* Input styling */
.domain-input {
    padding: 10px 15px; /* Binnenruimte voor de input */
    border: 2px solid #1C2B32; /* Grens rond het invoerveld */
    border-radius: 25px 0 0 25px; /* Alleen linker hoeken afronden */
    outline: none; /* Verwijder de standaard focus outline */
    background-color: transparent;
    color: #ffffff; /* Stel een leesbare tekstkleur in */

}

/* Button styling */
.domain-button {
    padding: 10px 20px; /* Binnenruimte voor de knop */
    border: 2px solid #1C2B32; /* Zelfde grens als de input om goed aan te sluiten */
    border-left: none;
    background-color: #1C2B32; /* Donkere achtergrondkleur */
    color: white; /* Witte tekstkleur voor contrast */
    border-radius: 0 25px 25px 0; /* Alleen rechter hoeken afronden */


}


@media (max-width: 600px) {
    .domain-form {
        display: block;
        text-align: center;
    }

    .domain-input, .domain-button {
        display: block;
        width: 90%; /* Zorg ervoor dat de input en button goed zichtbaar zijn, zelfs op kleinere schermen */
        margin: 10px auto; /* Voeg ruimte toe rondom de elementen en centreer ze */
        border-radius: 25px
    }
}


/* Optioneel: Hover Effect voor Button */
.domain-button:hover, .contact-button:hover {
    background-color: black; /* Geef een donkere achtergrond bij hover */
    color: #ffffff; /* Verander de tekstkleur naar wit voor contrast */
    cursor: pointer;
    transition: background-color 0.4s ease; /* Zachte overgang voor hover effect */
}

/* Normale placeholder styling */
.domain-input::placeholder {
    color: black; /* Lichtgrijze placeholder voor normale weergave */
}

/* Focus styling: placeholder vervagen */
.domain-input:focus::placeholder {
    color: transparent; /* Maakt de placeholder onzichtbaar zodra het veld actief is */

}

/* Focus styling: veld zelf */
.domain-input:focus {
    border-color: #3C4B52; /* Verander de kleur van de rand voor focus voor een duidelijke indicatie */
    outline: none; /* Verwijder het standaard randje van de browser bij focus */
    color: honeydew; /* Verander de tekstkleur naar honeydew voor contrast */
}

main {
    max-width: 1000px;
    margin: 3em auto 3em; /* Margin boven  */

}

/* Testimonials Styling */
.testimonials {
    text-align: center;

}


/* Testimonial Container Styling */
.testimonial-container {

    background-color: white;
    border-radius: 15px;
    padding: 40px 80px; /* Meer padding voor extra witruimte boven en onder */
    margin: 2rem; /* Meer ruimte boven en onder de testimonial */
    text-align: left; /* Tekst links uitlijnen voor een natuurlijke weergave */
    position: relative; /* Zorg dat schaduw werkt t.o.v. container */

    box-shadow: -3px -3px 6px rgba(0, 0, 0, 0.05),
    6px 6px 8px rgba(0, 0, 0, 0.15); /* Subtiele schaduw aan boven/links en meer aan onder/rechts */
}

/* Quote Icon Styling */
.quote-icon {
    width: 30px;
    height: auto;
    float: left; /* Zorgt dat het quote-icoon naast de tekst komt */
    margin-right: 10px; /* Ruimte tussen quote-icoon en tekst */
}

/* Testimonial Content */
.testimonial-content {
    display: block;
    overflow: hidden; /* Zorgt dat het floatende element wordt gecorrigeerd */
    margin-bottom: 20px; /* Ruimte tussen tekst en avatar */
}


/* Avatar Styling */
.avatar {
    width: 40px; /* Kleinere avatar */
    height: 40px;
    border-radius: 50%; /* Rond de afbeelding af */
    float: left; /* Avatar links van de tekst plaatsen */
    margin-left: 40px;
    margin-right: 15px; /* Voldoende ruimte tussen avatar en naam */
}

/* Testimonial Author Styling */
.testimonial-author {
    display: block;
    margin-top: 30px;
    text-align: left;
    font-style: italic; /* Italic maken van naam en functie */

    color: #333; /* Iets donkerder kleur voor contrast */
}


/*///////////// 3.3 Support /////////////*/

.supportteam p {
    /*Overwrite van de global*/
    font-size: 14px;
}

#support-image {
    /*max-width: 100%; niet nodig. Zie css reset nr. 7*/
    height: auto; /* Houd de verhouding van de afbeelding consistent*/
    border-radius: 10px;
    margin: 1em auto 1em; /* Margin top & right+left & bottom */

}

.contact-button {
    display: block;
    margin: 1em 0;
    background-color: #1C2B32;
    color: white;
    padding: 12px 12px;
    font-size: 13px;
    border-radius: 25px;

}


/*///////////// 3.4 Faq /////////////*/

.faq summary {
    text-align: left; /* Zorg ervoor dat de tekst in het summary element naar links uitgelijnd is */
    cursor: pointer; /* Geef de gebruiker een visuele aanwijzing dat het klikbaar is */
    font-weight: lighter; /* Optioneel: geef de tekst een opvallendere styling */
    font-size: 14px;
    margin: 0.5em auto;
}

.faq details {
    text-align: left; /* Zorg ervoor dat de inhoud van details naar links uitgelijnd is */

}

.faq-text {
    background-color: #899CA0;
    border-radius: 10px;
    margin: 1em auto;
    text-align: left;
    padding: 2em;
    color: white;
}

/*///////////// 3.5 Footer /////////////*/